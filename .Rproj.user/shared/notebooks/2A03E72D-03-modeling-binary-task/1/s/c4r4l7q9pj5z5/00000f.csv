"0","options(digits=3)"
"0",""
"0","mu <- 3;sigma <- 1"
"0","zeta <- 1"
"0","step <- 0.1"
"0",""
"0","lowerLimit<- -1 # lower limit"
"0","upperLimit <- mu + 3*sigma # upper limit"
"0",""
"0","z <- seq(lowerLimit, upperLimit, by = step)"
"0","pdfs <- dnorm(z)"
"0","seqNor <- seq(zeta,upperLimit,step)"
"0","cord.x <- c(zeta, seqNor,upperLimit) "
"0","# need two y-coords at each end point of range; "
"0","# one at zero and one at value of function"
"0","cord.y <- c(0,dnorm(seqNor),0) "
"0","curveData <- data.frame(z = z, pdfs = pdfs)"
"0","shadeData <- data.frame(z = cord.x, pdfs = cord.y)"
"0","shadedPlots <- ggplot(mapping = aes(x = z, y = pdfs)) + "
"0","  geom_line(data = curveData, color = ""blue"") + "
"0","  geom_polygon(data = shadeData, color = ""blue"", fill = ""blue"")"
"0",""
"0","crossing <- uniroot(function(x) dnorm(x) - dnorm(x,mu,sigma), "
"0","                    lower = 0, upper = 3)$root"
"0","crossing <- max(c(zeta, crossing))"
"0","seqAbn <- seq(crossing,upperLimit,step)"
"0","cord.x <- c(seqAbn, rev(seqAbn))"
"0","# reason for reverse "
"0","# we want to explicitly define the polygon"
"0","# we dont want R to close it "
"0",""
"0","cord.y <- c()"
"0","for (i in seq(1,length(cord.x)/2)) {"
"0","  cord.y <- c(cord.y,dnorm(cord.x[i],mu, sigma))"
"0","}"
"0","for (i in seq(1,length(cord.x)/2)) {"
"0","  cord.y <- c(cord.y,dnorm(cord.x[length(cord.x)/2+i]))"
"0","}"
"0","pdfs <- dnorm(z, mu, sigma)"
"0","curveData <- data.frame(z = z, pdfs = pdfs)"
"0","shadeData <- data.frame(z = cord.x, pdfs = cord.y)"
"0","shadedPlots <- shadedPlots + "
"0","  geom_line(data = curveData, color = ""red"") + "
"0","  geom_polygon(data = shadeData, color = ""red"", fill = ""red"")"
"0","seqAbn <- seq(zeta,upperLimit,step)"
"0","for (i in seqAbn) {"
"0","  # define xs and ys of two points, separated only along y-axis"
"0","  vlineData <- data.frame(x1 = i, "
"0","                          x2 = i, "
"0","                          y1 = 0, "
"0","                          y2 = dnorm(i, mu, sigma))"
"0","  # draw vertical line between them"
"0","  shadedPlots <- shadedPlots + "
"0","    geom_segment(aes(x = x1, xend = x2, y = y1, yend = y2), "
"0","                 data = vlineData, color = ""red"")"
"0","}"
"0","shadedPlots <- shadedPlots + xlab(label = ""z-sample"")"
"0","print(shadedPlots)"
