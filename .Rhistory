for (mu in 0:3){
TPF <- pnorm(mu-zeta)
curveData <- data.frame(FPF = FPF, TPF = TPF)
rocPlot <- rocPlot +
geom_line(data = curveData, linewidth = 2) +
xlab("FPF")+ ylab("TPF" ) +
theme(axis.title.y = element_text(size = 25,face="bold"),
axis.title.x = element_text(size = 30,face="bold"))  +
annotate("text",
x = pnorm(-mu/2) + 0.07,
y = pnorm(mu/2),
label = paste0("mu == ", mu),
parse = TRUE, size = 8)
next
}
rocPlot <- rocPlot +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
rocPlot <- rocPlot +
geom_abline(slope = -1,
intercept = 1,
linetype = 3,
linewidth = 2)
print(rocPlot)
mu <- 0;zeta <- seq(-5, mu + 5, 0.05)
FPF <- pnorm(-zeta)
rocPlot <- ggplot(mapping = aes(x = FPF, y = TPF))
for (mu in 0:3){
TPF <- pnorm(mu-zeta)
curveData <- data.frame(FPF = FPF, TPF = TPF)
rocPlot <- rocPlot +
geom_line(data = curveData, linewidth = 2) +
xlab("FPF")+ ylab("TPF" ) +
theme(axis.title.y = element_text(size = 25,face="bold"),
axis.title.x = element_text(size = 30,face="bold"))  +
annotate("text",
x = pnorm(-mu/2) + 0.08,
y = pnorm(mu/2),
label = paste0("mu == ", mu),
parse = TRUE, size = 8)
next
}
rocPlot <- rocPlot +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
rocPlot <- rocPlot +
geom_abline(slope = -1,
intercept = 1,
linetype = 3,
linewidth = 2)
print(rocPlot)
mu <- 0;zeta <- seq(-5, mu + 5, 0.05)
FPF <- pnorm(-zeta)
rocPlot <- ggplot(mapping = aes(x = FPF, y = TPF))
for (mu in 0:3){
TPF <- pnorm(mu-zeta)
curveData <- data.frame(FPF = FPF, TPF = TPF)
rocPlot <- rocPlot +
geom_line(data = curveData, linewidth = 2) +
xlab("FPF")+ ylab("TPF" ) +
theme(axis.title.y = element_text(size = 25,face="bold"),
axis.title.x = element_text(size = 30,face="bold"))  +
annotate("text",
x = pnorm(-mu/2) + 0.09,
y = pnorm(mu/2) - 0.02,
label = paste0("mu == ", mu),
parse = TRUE, size = 8)
next
}
rocPlot <- rocPlot +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
rocPlot <- rocPlot +
geom_abline(slope = -1,
intercept = 1,
linetype = 3,
linewidth = 2)
print(rocPlot)
mu <- 0;zeta <- seq(-5, mu + 5, 0.05)
FPF <- pnorm(-zeta)
rocPlot <- ggplot(mapping = aes(x = FPF, y = TPF))
for (mu in 0:3){
TPF <- pnorm(mu-zeta)
curveData <- data.frame(FPF = FPF, TPF = TPF)
rocPlot <- rocPlot +
geom_line(data = curveData, linewidth = 2) +
xlab("FPF")+ ylab("TPF" ) +
theme(axis.title.y = element_text(size = 25,face="bold"),
axis.title.x = element_text(size = 30,face="bold"))  +
annotate("text",
x = pnorm(-mu/2) + 0.11,
y = pnorm(mu/2) - 0.02,
label = paste0("mu == ", mu),
parse = TRUE, size = 8)
next
}
rocPlot <- rocPlot +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
rocPlot <- rocPlot +
geom_abline(slope = -1,
intercept = 1,
linetype = 3,
linewidth = 2)
print(rocPlot)
mu <- 0;zeta <- seq(-5, mu + 5, 0.05)
FPF <- pnorm(-zeta)
rocPlot <- ggplot(mapping = aes(x = FPF, y = TPF))
for (mu in 0:3){
TPF <- pnorm(mu-zeta)
curveData <- data.frame(FPF = FPF, TPF = TPF)
rocPlot <- rocPlot +
geom_line(data = curveData, linewidth = 2) +
xlab("FPF")+ ylab("TPF" ) +
theme(axis.title.y = element_text(size = 25,face="bold"),
axis.title.x = element_text(size = 30,face="bold"))  +
annotate("text",
x = pnorm(-mu/2) + 0.11,
y = pnorm(mu/2) + 0.02,
label = paste0("mu == ", mu),
parse = TRUE, size = 8)
next
}
rocPlot <- rocPlot +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
rocPlot <- rocPlot +
geom_abline(slope = -1,
intercept = 1,
linetype = 3,
linewidth = 2)
print(rocPlot)
mu <- 0;zeta <- seq(-5, mu + 5, 0.05)
FPF <- pnorm(-zeta)
rocPlot <- ggplot(mapping = aes(x = FPF, y = TPF))
for (mu in 0:3){
TPF <- pnorm(mu-zeta)
curveData <- data.frame(FPF = FPF, TPF = TPF)
rocPlot <- rocPlot +
geom_line(data = curveData, linewidth = 2) +
xlab("FPF")+ ylab("TPF" ) +
theme(axis.title.y = element_text(size = 25,face="bold"),
axis.title.x = element_text(size = 30,face="bold"))  +
annotate("text",
x = pnorm(-mu/2) + 0.11,
y = pnorm(mu/2) + 0.0,
label = paste0("mu == ", mu),
parse = TRUE, size = 8)
next
}
rocPlot <- rocPlot +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
rocPlot <- rocPlot +
geom_abline(slope = -1,
intercept = 1,
linetype = 3,
linewidth = 2)
print(rocPlot)
mu <- 0;zeta <- seq(-5, mu + 5, 0.05)
FPF <- pnorm(-zeta)
rocPlot <- ggplot(mapping = aes(x = FPF, y = TPF))
for (mu in 0:3){
TPF <- pnorm(mu-zeta)
curveData <- data.frame(FPF = FPF, TPF = TPF)
rocPlot <- rocPlot +
geom_line(data = curveData, linewidth = 2) +
xlab("FPF")+ ylab("TPF" ) +
theme(axis.title.y = element_text(size = 25,face="bold"),
axis.title.x = element_text(size = 30,face="bold"))  +
annotate("text",
x = pnorm(-mu/2) + 0.11,
y = pnorm(mu/2) + 0.0,
label = paste0("mu == ", mu),
parse = TRUE, size = 8)
next
}
rocPlot <- rocPlot +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
rocPlot <- rocPlot +
geom_abline(slope = -1,
intercept = 1,
linetype = 2,
linewidth = 1)
print(rocPlot)
mu <- 0;zeta <- seq(-5, mu + 5, 0.05)
FPF <- pnorm(-zeta)
rocPlot <- ggplot(mapping = aes(x = FPF, y = TPF))
for (mu in 0:3){
TPF <- pnorm(mu-zeta)
curveData <- data.frame(FPF = FPF, TPF = TPF)
rocPlot <- rocPlot +
geom_line(data = curveData, linewidth = 1) +
xlab("FPF")+ ylab("TPF" ) +
theme(axis.title.y = element_text(size = 25,face="bold"),
axis.title.x = element_text(size = 30,face="bold"))  +
annotate("text",
x = pnorm(-mu/2) + 0.11,
y = pnorm(mu/2) + 0.0,
label = paste0("mu == ", mu),
parse = TRUE, size = 8)
next
}
rocPlot <- rocPlot +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
rocPlot <- rocPlot +
geom_abline(slope = -1,
intercept = 1,
linetype = 2,
linewidth = 1)
print(rocPlot)
cat("pnorm(3/sqrt(2)) = ", pnorm(3/sqrt(2)))
alpha <- 0.05
# this is z_{\alpha/2}, the upper \alpha/2 quantile
cat("qnorm(1-alpha/2) = ", qnorm(1-alpha/2))
# this is \Phi^{-1}(\alpha/2), the lower \alpha/2 quantile
cat("qnorm(alpha/2) = ", qnorm(alpha/2))
alpha <- 0.05
# this is z_{\alpha/2}, the upper \alpha/2 quantile
cat("qnorm(1-alpha/2) = ", qnorm(1-alpha/2), "\n")
# this is \Phi^{-1}(\alpha/2), the lower \alpha/2 quantile
cat("qnorm(alpha/2) = ", qnorm(alpha/2), "\n")
qnorm(0.025)
-qnorm(0.025)
pnorm(-qnorm(0.025))
1-pnorm(-qnorm(0.025))
qnorm(1-0.025)
alpha <- 0.05
# this is z_{\alpha/2}, the upper \alpha/2 quantile
cat("qnorm(1-alpha/2) = ", qnorm(1-alpha/2), "\n")
# this is \Phi^{-1}(\alpha/2), the lower \alpha/2 quantile
cat("-qnorm(alpha/2) = ", -qnorm(alpha/2), "\n")
alpha <- 0.05
cat("-qnorm(alpha/2) = ", -qnorm(alpha/2), "\n")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(kableExtra)
library(ggplot2)
library(gridExtra)
plotROC <- function (mu, sigma, FPF, TPF)
{
zeta <- seq(- mu - 2,+ mu + 2,0.01)
fpf <- array(dim = length(zeta))
tpf <- array(dim = length(zeta))
for (i in 1:length(zeta)) {
fpf[i] <- pnorm(-zeta[i])
tpf[i] <- pnorm((mu -zeta[i])/sigma)
}
curveData <- data.frame(FPF = c(1, fpf, 0), TPF = c(1, tpf, 0))
pointsData <- data.frame(FPF = FPF, TPF = TPF)
rocPlot <- ggplot(mapping = aes(x = FPF, y = TPF)) + geom_line(data = curveData) + geom_point(data = pointsData, shape = 1, size = 3)
return(rocPlot)
}
Ktr = array(dim = c(2,5))
Ktr[1,]  <- rev(c(30,19,8,2,1)) # Table 4.2.1
Ktr[2,]  <- rev(c(5,6,5,12,22))
df <- as.data.frame(Ktr)
colnames(df) <- c("$r = 5$","$r = 4$","$r = 3$","$r = 2$","$r = 1$")
rownames(df) <- c("non-diseased","diseased")
knitr::kable(df, caption = "Representative counts table.", escape = FALSE)
options(digits=4)
# R = number of bins; 5
R <- length(Ktr[1,])
OpPts <- array(0,dim = c(2,R))
for (r in 1:R) {
OpPts[1,r] <- sum(Ktr[1, 1:r])/sum(Ktr[1,])
OpPts[2,r] <- sum(Ktr[2, 1:r])/sum(Ktr[2,])
}
df <- as.data.frame(OpPts)
colnames(df) <- c("$r\\geq 5$","$r\\geq 4$","$r\\geq 3$","$r\\geq 2$","$r\\geq 1$")
rownames(df) <- c("FPF","TPF")
knitr::kable(df, caption = "Computation of operating points from cell counts.", escape = FALSE)
K1 <- 60;K2 <- 50
FPF <- c(0, cumsum(rev(c(30, 19, 8, 2, 1))) / K1)
TPF <- c(0, cumsum(rev(c(5, 6, 5, 12, 22))) / K2)
ROCOp <- data.frame(FPF = FPF, TPF = TPF)
ROCPlot <- ggplot(data = ROCOp, mapping =
aes(x = FPF, y = TPF)) +
geom_line(linewidth = 1) +
geom_point(size = 4) +
theme_bw() +
theme(panel.grid.major =
element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black"),
axis.text = element_text(size = 15),
axis.title = element_text(size = 20)) +
scale_x_continuous(expand = c(0, 0),
breaks = c(0.25, 0.5, 0.75, 1)) +
scale_y_continuous(expand = c(0, 0), breaks = c(0.25, 0.5, 0.75, 1)) +
coord_cartesian(ylim = c(0,1), x = c(0,1)) +
annotation_custom(grob = textGrob(bquote(italic("O")),
gp = gpar(fontsize = 22)),
xmin = -0.03, xmax = -0.03,
ymin = -0.03, ymax = -0.03) +
annotation_custom(grob = textGrob(bquote(italic(O[4])),
gp = gpar(fontsize = 22)),
xmin = 0.06, xmax = 0.06,
ymin = 0.40, ymax = 0.40) +
annotation_custom(grob = textGrob(bquote(italic(O[3])),
gp = gpar(fontsize = 22)),
xmin = 0.10, xmax = 0.10,
ymin = 0.64, ymax = 0.64) +
annotation_custom(grob = textGrob(bquote(italic(O[2])),
gp = gpar(fontsize = 22)),
xmin = 0.16, xmax = 0.16,
ymin = 0.83, ymax = 0.83) +
annotation_custom(grob = textGrob(bquote(italic(O[1])),
gp = gpar(fontsize = 22)),
xmin = 0.49, xmax = 0.49,
ymin = 0.94, ymax = 0.94)
K1 <- 60;K2 <- 50
FPF <- c(0, cumsum(rev(c(30, 19, 8, 2, 1))) / K1)
TPF <- c(0, cumsum(rev(c(5, 6, 5, 12, 22))) / K2)
ROCOp <- data.frame(FPF = FPF, TPF = TPF)
ROCPlot <- ggplot(data = ROCOp, mapping =
aes(x = FPF, y = TPF)) +
geom_line(linewidth = 1) +
geom_point(size = 4) +
theme_bw() +
theme(panel.grid.major =
element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black"),
axis.text = element_text(size = 15),
axis.title = element_text(size = 20)) +
scale_x_continuous(expand = c(0, 0),
breaks = c(0.25, 0.5, 0.75, 1)) +
scale_y_continuous(expand = c(0, 0), breaks = c(0.25, 0.5, 0.75, 1)) +
coord_cartesian(ylim = c(0,1), x = c(0,1)) +
annotation_custom(grob = grid::textGrob(bquote(italic("O")),
gp = grid::gpar(fontsize = 22)),
xmin = -0.03, xmax = -0.03,
ymin = -0.03, ymax = -0.03) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[4])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.06, xmax = 0.06,
ymin = 0.40, ymax = 0.40) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[3])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.10, xmax = 0.10,
ymin = 0.64, ymax = 0.64) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[2])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.16, xmax = 0.16,
ymin = 0.83, ymax = 0.83) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[1])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.49, xmax = 0.49,
ymin = 0.94, ymax = 0.94)
p <- ggplotGrob(ROCPlot)
p$layout$clip[p$layout$name=="panel"] <- "off"
grid.draw(p)
K1 <- 60;K2 <- 50
FPF <- c(0, cumsum(rev(c(30, 19, 8, 2, 1))) / K1)
TPF <- c(0, cumsum(rev(c(5, 6, 5, 12, 22))) / K2)
ROCOp <- data.frame(FPF = FPF, TPF = TPF)
ROCPlot <- ggplot(data = ROCOp, mapping =
aes(x = FPF, y = TPF)) +
geom_line(linewidth = 1) +
geom_point(size = 4) +
theme_bw() +
theme(panel.grid.major =
element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black"),
axis.text = element_text(size = 15),
axis.title = element_text(size = 20)) +
scale_x_continuous(expand = c(0, 0),
breaks = c(0.25, 0.5, 0.75, 1)) +
scale_y_continuous(expand = c(0, 0), breaks = c(0.25, 0.5, 0.75, 1)) +
coord_cartesian(ylim = c(0,1), x = c(0,1)) +
annotation_custom(grob = grid::textGrob(bquote(italic("O")),
gp = grid::gpar(fontsize = 22)),
xmin = -0.03, xmax = -0.03,
ymin = -0.03, ymax = -0.03) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[4])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.06, xmax = 0.06,
ymin = 0.40, ymax = 0.40) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[3])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.10, xmax = 0.10,
ymin = 0.64, ymax = 0.64) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[2])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.16, xmax = 0.16,
ymin = 0.83, ymax = 0.83) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[1])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.49, xmax = 0.49,
ymin = 0.94, ymax = 0.94)
p <- ggplotGrob(ROCPlot)
p$layout$clip[p$layout$name=="panel"] <- "off"
grid::grid.draw(p)
qnorm(1-0.5)
mu-qnorm(0.9)
qnorm(1-0.5)
mu_ev-qnorm(0.9)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(kableExtra)
library(ggplot2)
library(gridExtra)
plotROC <- function (mu, sigma, FPF, TPF)
{
zeta <- seq(- mu - 2,+ mu + 2,0.01)
fpf <- array(dim = length(zeta))
tpf <- array(dim = length(zeta))
for (i in 1:length(zeta)) {
fpf[i] <- pnorm(-zeta[i])
tpf[i] <- pnorm((mu -zeta[i])/sigma)
}
curveData <- data.frame(FPF = c(1, fpf, 0), TPF = c(1, tpf, 0))
pointsData <- data.frame(FPF = FPF, TPF = TPF)
rocPlot <- ggplot(mapping = aes(x = FPF, y = TPF)) + geom_line(data = curveData) + geom_point(data = pointsData, shape = 1, size = 3)
return(rocPlot)
}
Ktr = array(dim = c(2,5))
Ktr[1,]  <- rev(c(30,19,8,2,1)) # Table 4.2.1
Ktr[2,]  <- rev(c(5,6,5,12,22))
df <- as.data.frame(Ktr)
colnames(df) <- c("$r = 5$","$r = 4$","$r = 3$","$r = 2$","$r = 1$")
rownames(df) <- c("non-diseased","diseased")
knitr::kable(df, caption = "Representative counts table.", escape = FALSE)
options(digits=4)
# R = number of bins; 5
R <- length(Ktr[1,])
OpPts <- array(0,dim = c(2,R))
for (r in 1:R) {
OpPts[1,r] <- sum(Ktr[1, 1:r])/sum(Ktr[1,])
OpPts[2,r] <- sum(Ktr[2, 1:r])/sum(Ktr[2,])
}
df <- as.data.frame(OpPts)
colnames(df) <- c("$r\\geq 5$","$r\\geq 4$","$r\\geq 3$","$r\\geq 2$","$r\\geq 1$")
rownames(df) <- c("FPF","TPF")
knitr::kable(df, caption = "Computation of operating points from cell counts.", escape = FALSE)
K1 <- 60;K2 <- 50
FPF <- c(0, cumsum(rev(c(30, 19, 8, 2, 1))) / K1)
TPF <- c(0, cumsum(rev(c(5, 6, 5, 12, 22))) / K2)
ROCOp <- data.frame(FPF = FPF, TPF = TPF)
ROCPlot <- ggplot(data = ROCOp, mapping =
aes(x = FPF, y = TPF)) +
geom_line(linewidth = 1) +
geom_point(size = 2) +
theme_bw() +
theme(panel.grid.major =
element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black"),
axis.text = element_text(size = 15),
axis.title = element_text(size = 20)) +
scale_x_continuous(expand = c(0, 0),
breaks = c(0.25, 0.5, 0.75, 1)) +
scale_y_continuous(expand = c(0, 0), breaks = c(0.25, 0.5, 0.75, 1)) +
coord_cartesian(ylim = c(0,1), x = c(0,1)) +
annotation_custom(grob = grid::textGrob(bquote(italic("O")),
gp = grid::gpar(fontsize = 22)),
xmin = -0.03, xmax = -0.03,
ymin = -0.03, ymax = -0.03) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[5])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.06, xmax = 0.06,
ymin = 0.40, ymax = 0.40) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[4])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.10, xmax = 0.10,
ymin = 0.64, ymax = 0.64) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[3])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.16, xmax = 0.16,
ymin = 0.83, ymax = 0.83) +
annotation_custom(grob = grid::textGrob(bquote(italic(O[2])),
gp = grid::gpar(fontsize = 22)),
xmin = 0.49, xmax = 0.49,
ymin = 0.95, ymax = 0.95)
p <- ggplotGrob(ROCPlot)
p$layout$clip[p$layout$name=="panel"] <- "off"
grid::grid.draw(p)
options(digits = 3)
FPF <- OpPts[1,]
TPF <- OpPts[2,]
df <- data.frame(FPF = FPF, TPF = TPF)
df <- t(df)
print(df)
# ev = equal variance model
mu_ev <- qnorm(.5)+qnorm(.9);sigma_ev <- 1
Az_ev <- pnorm(mu_ev/sqrt(2))
cat("uppermost point based estimate of mu_ev = ", mu_ev, "\n")
cat("corresponding estimate of Az_ev = ", Az_ev, "\n")
# equal variance fit to uppermost operating point
p1 <- plotROC (mu_ev, sigma_ev, FPF, TPF)
# the following values are from unequal-variance model fitting
# to be discussed in the next chapter
mu <- 2.17;sigma <- 1.65
# following formula is discussed in the next chapter
Az <- pnorm(mu/sqrt(1+sigma^2))
cat("binormal unequal variance model estimate of Az = ", Az, "\n")
# unequal variance fit to all operating points
p2 <- plotROC (mu, sigma, FPF, TPF)
grid.arrange(p1,p2,ncol=2)
qnorm(1-0.5)
mu_ev-qnorm(0.9)
mu_ev
# Sp = 1 - 0.5
# Se = 0.9
cat("zeta from Sp = ", qnorm(1-0.5),"\n")
cat("zeta from Se = ", mu_ev-qnorm(0.9),"\n")
rmarkdown::clean_site(preview = FALSE)
warnings()
